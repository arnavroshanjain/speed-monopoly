plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'idea'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.0'

}
group 'com.nsa.cm6123-6623'
version '1.0-SNAPSHOT'

sourceCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
    implementation 'org.testng:testng:7.1.0'
    implementation 'org.testng:testng:7.1.0'
    implementation 'org.testng:testng:7.1.0'
    implementation 'org.testng:testng:7.1.0'
    implementation 'org.testng:testng:7.1.0'


    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')
    testImplementation('org.mockito:mockito-core:4.1.0')
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")

}

//test configuration
test{
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
//application configuration

run{
    standardInput = System.in
}

jar {
    manifest {
        attributes ('Main-Class': 'com.cm6123.monopoly.app.Application',
        'Multi-Release':'true')

    }
    from sourceSets.main.allSource

}



application {
    mainClassName = 'com.cm6123.monopoly.app.Application'

}

//tool configuration
checkstyle {
    toolVersion = 9.2
    checkstyleMain.enabled = true
    checkstyleTest.enabled = false
}

checkstyleMain {
    configFile = file("config/checkstyle/checkstyleMain.xml")
    maxErrors = 10
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
            excludes = [
                    'com.cm6123.monopoly.app.*'
            ]
        }
    }
}
check.dependsOn jacocoTestCoverageVerification
// create combined task

task buildAndReport {
    dependsOn build, jacocoTestReport
}

rootProject.tasks.named("jar") {
    duplicatesStrategy = 'include'
}
